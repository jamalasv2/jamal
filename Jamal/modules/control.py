from PyroUbot import *

__MODULE__ = "control"
__HELP__ = """
<blockquote><b>„Äé bantuan untuk control „Äè</b>

**‚ùè perintah:** <code>{0}setprefix</code>
‚Äî untuk merubah prefix atau handler perintah

**‚ùè perintah:** <code>{0}setemoji</code> query - emoji
‚Äî untuk mengubah emoji 

queri :
‚Äî <code>pong</code>  ‚Äî <code>proses</code>
‚Äî <code>user</code>  ‚Äî <code>berhasil</code>
‚Äî <code>ubot</code>  ‚Äî <code>gagal</code>

‚Äî <code>keterangan</code>
‚Äî <code>waktu</code>
‚Äî <code>group</code>

**contoh:**
{0}setemoji pong üóø</blockquote>
 """

@PY.UBOT("setprefix", sudo=True)
async def _(client, message):
    prs = await EMO.PROSES(client)
    brhsl = await EMO.BERHASIL(client)
    Tm = await message.reply(f"{prs} ·¥ç·¥á·¥ç·¥ò Ä·¥ès·¥ás", quote=True)
    if len(message.command) < 2:
        return await Tm.edit(f"<code>{message.text}</code> s…™·¥ç ô·¥è ü ·¥ò Ä·¥á“ì…™x")
    else:
        ub_prefix = []
        for prefix in message.command[1:]:
            if prefix.lower() == "none":
                ub_prefix.append("")
            else:
                ub_prefix.append(prefix)
        try:
            client.set_prefix(message.from_user.id, ub_prefix)
            await set_pref(message.from_user.id, ub_prefix)
            parsed_prefix = " ".join(f"<code>{prefix}</code>" for prefix in ub_prefix)
            return await Tm.edit(f"{brhsl}<b> ·¥ò Ä·¥á“ì…™x ·¥õ·¥á ü·¥Ä ú ·¥Ö…™·¥ú ô·¥Ä ú ·¥ã·¥á: {parsed_prefix}</b>")
        except Exception as error:
            return await Tm.edit(str(error))


@PY.UBOT("setemoji", sudo=True)
async def _(client, message):
    prs = await EMO.PROSES(client)
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    try:
        msg = await message.reply(f"{prs} ·¥ç·¥á·¥ç·¥ò Ä·¥ès·¥ás...", quote=True)

        if not client.me.is_premium:
            return await msg.edit(
                "<b>·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á…¥…¢…¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú …™…¥…™ ·¥Ä·¥ã·¥ú…¥ ·¥Ä…¥·¥Ö·¥Ä  ú·¥Ä Ä·¥ú ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥õ·¥á Ä ü·¥á ô…™ ú</b>"
            )

        if len(message.command) < 3:
            return await msg.edit(f"{ggl}<b> ·¥õ·¥è ü·¥è…¥…¢ ·¥ç·¥Äs·¥ú·¥ã·¥ã·¥Ä…¥ «´·¥ú·¥á Ä è ·¥Ö·¥Ä…¥ ·¥á·¥ç·¥è·¥ä…™ …¥ è·¥Ä</b>")

        query_mapping = {
            "pong": "EMOJI_PING",
            "user": "EMOJI_MENTION",
            "ubot": "EMOJI_USERBOT",
            "proses": "EMOJI_PROSES", 
            "berhasil":"EMOJI_BERHASIL",
            "gagal":"EMOJI_GAGAL",
            "keterangan": "EMOJI_BL_KETERANGAN",
            "menunggu": "EMOJI_MENUNGGU",
            "group":"EMOJI_BL_GROUP",
            "broadcast":"EMOJI_BROADCAST",
        }
        command, mapping, value = message.command[:3]

        if mapping.lower() in query_mapping:
            query_var = query_mapping[mapping.lower()]
            emoji_id = None
            if message.entities:
                for entity in message.entities:
                    if entity.custom_emoji_id:
                        emoji_id = entity.custom_emoji_id
                        break

            if emoji_id:
                await set_vars(client.me.id, query_var, emoji_id)
                await msg.edit(
                    f"<b> <code>{query_var}</code>{brhsl}  ô·¥á Ä ú·¥Äs…™ ü ·¥Ö…™ s·¥á·¥õ·¥õ…™…¥…¢ ·¥ã·¥á:</b> <emoji id={emoji_id}>{value}</emoji>"
                )
            else:
                await msg.edit(f"{ggl}<b>·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ö·¥Ä·¥ò·¥Ä·¥õ ·¥ç·¥á…¥·¥á·¥ç·¥ú·¥ã·¥Ä…¥ ·¥á·¥ç·¥è·¥ä…™ ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç</b>")
        else:
            await msg.edit(f"{ggl}<b> ·¥ç·¥Ä·¥ò·¥ò…™…¥…¢ ·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ö…™·¥õ·¥á·¥ç·¥ú·¥ã·¥Ä…¥</b>")

    except Exception as error:
        await msg.edit(str(error))

